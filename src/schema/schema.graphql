type Cv {
  id: ID!
  name: String!
  age: Int
  job: String!
  user: User!
  skills: [Skill]
}

type User {
  id: ID!
  name: String!
  email: String
  role: Role
  cv: [Cv]
}

type Skill {
  id: ID!
  description: String!
  cv: [Cv]
}
enum Role {
  ADMIN
  USER
}

type Query {
  getCvs: [Cv]
  getCvsById(id: Int): Cv
}
type Mutation {
  addCv(cvInput: CvAddInput!): Cv!
  updateCv(id: Int!, updatecvInput: UpdateCvInput!): Cv!
  deleteCv(id: Int!): Cv!
}
input CvAddInput {
  name: String!
  age: Int!
  job: String!
  userId: Int!
  skills: [Int]
}
input UpdateCvInput {
  name: String
  age: Int
  job: String
  userId: Int
  skills: [Int]
}

type Subscription{
   CvAdded:Cv!
   cvDeleted:Cv!
   cvUpdated:Cv!
}
